argparse_cfg:
  gpus:
    bind_to: processor_cfg.gpus
    help: number of gpus
  work_dir:
    bind_to: processor_cfg.work_dir
    help: the dir to save logs and models
  batch_size:
    bind_to: processor_cfg.batch_size
  resume_from:
    bind_to: processor_cfg.resume_from
    help: the checkpoint file to resume from


processor_cfg:
  type: 'processor.recognition.train'
  workers: 16

  # model setting
  model_cfg:
    type: 'models.backbones.ST_GCN_18'
    in_channels: 3
    num_class: 4
    edge_importance_weighting: True
    graph_cfg:
      layout: 'coco'
      strategy: 'spatial'
  loss_cfg:
    type: 'torch.nn.CrossEntropyLoss'

  # dataset setting
  dataset_cfg:
    # training set
    - type: "datasets.DataPipeline"
      data_source:
        type: "datasets.SkeletonLoader"
        data_dir: zmh/dataset/train/skeleton
        num_track: 1
        num_keypoints: 17
        repeat: 5
      pipeline:
        - {type: "datasets.skeleton.normalize_by_resolution"}
        - {type: "datasets.skeleton.mask_by_visibility"}
        - {type: "datasets.skeleton.pad_zero", size: 150 }
        - {type: "datasets.skeleton.random_crop", size: 150 }
        # - {type: "datasets.skeleton.simulate_camera_moving"}
        - {type: "datasets.skeleton.transpose", order: [0, 2, 1, 3]}
        - {type: "datasets.skeleton.to_tuple"}

    - type: "datasets.DataPipeline"
      data_source:
        type: "datasets.SkeletonLoader"
        data_dir: zmh/dataset/val/skeleton
        num_track: 1
        num_keypoints: 17
      pipeline:
        - {type: "datasets.skeleton.normalize_by_resolution"}
        - {type: "datasets.skeleton.mask_by_visibility"}
        - {type: "datasets.skeleton.pad_zero", size: 150 }
        - {type: "datasets.skeleton.random_crop", size: 150 }
        - {type: "datasets.skeleton.transpose", order: [0, 2, 1, 3]}
        - {type: "datasets.skeleton.to_tuple"}

  # dataloader setting
  batch_size: 200
  gpus: 8 

  # optimizer setting
  optimizer_cfg:
    type: 'torch.optim.SGD'
    lr: 0.1
    momentum: 0.9
    nesterov: true
    weight_decay: 0.0001

  # runtime setting
  workflow: [['train', 20], ['val', 1]]
  work_dir: zmh/work_dir
  total_epochs: 1000
  training_hooks:
    lr_config:
      policy: 'step'
      step: [800, 900]
    log_config:
      interval: 400
      hooks:
        - type: TextLoggerHook
    checkpoint_config:
      interval: 100
    optimizer_config:
  resume_from:
  load_from: